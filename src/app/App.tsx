// src/App.tsx (–ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø)

import { Route, Routes, useNavigate, useLocation } from "react-router-dom";
import { useEffect, useState } from "react";
import ReactGA from "react-ga4";
import SwipeRouter from "../features/swiper/swiper.tsx";
import Layout from "../features/layout/layout.tsx";

const TRACKING_ID = "G-2J5SZSQH87";

declare global {
    interface Window {
        Telegram: any;
    }
}

function App() {
    const [isMobile, setIsMobile] = useState<boolean | null>(null);
    const navigate = useNavigate();
    const location = useLocation();

    // 1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Google Analytics
    useEffect(() => {
        ReactGA.initialize(TRACKING_ID);
    }, []);

    // 2. –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ —Å—Ç—Ä–∞–Ω–∏—Ü
    useEffect(() => {
        ReactGA.send({ hitType: "pageview", page: location.pathname + location.search });
    }, [location]);

    // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
    useEffect(() => {
        const checkIsMobile = () => /Mobi|Android|iPhone/i.test(navigator.userAgent);
        setIsMobile(checkIsMobile());
    }, []);

    // 4. –†–∞–±–æ—Ç–∞ —Å Telegram WebApp
    useEffect(() => {
        const tg = window.Telegram?.WebApp;
        if (tg) {
            tg.ready();
            tg.expand();
            tg.setBackgroundColor('#f4f1e9'); // –£—Å—Ç–∞–Ω–æ–≤–∏–º —Ü–≤–µ—Ç —Ñ–æ–Ω–∞, –∫–∞–∫ —É –∫–∞—Ä—Ç—ã

            const startParam = tg.initDataUnsafe?.start_param;
            if (startParam === 'generatePhoto') {
                navigate('/generatePhoto');
            } else if (startParam === 'mapOfBatyrs') {
                navigate('/mapOfBatyrs');
            }
        }
    }, [navigate]);

    if (isMobile === null) return null;

    if (!isMobile) {
        return (
            <div style={{ height: '100vh', display: 'flex', alignItems: 'center', justifyContent: 'center', textAlign: 'center', padding: '1rem' }}>
                <div>
                    <h2>‚ö†Ô∏è “ö–æ–ª–¥–∞–Ω–±–∞ —Ç–µ–∫ –º–æ–±–∏–ª—å–¥—ñ “õ“±—Ä—ã–ª“ì—ã–ª–∞—Ä“ì–∞ –∞—Ä–Ω–∞–ª“ì–∞–Ω</h2>
                    <p>–°–∞–π—Ç—Ç—ã —Ç–µ–ª–µ—Ñ–æ–Ω –∞—Ä“õ—ã–ª—ã –∞—à—ã“£—ã–∑ üì±</p>
                </div>
            </div>
        );
    }

    return (
        <Routes>
            <Route path="/" element={<Layout />}>
                {/* 
                  ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û:
                  –£–±—Ä–∞–Ω—ã –≤—Å–µ `key`, —á—Ç–æ–±—ã –æ–±–µ—Å–ø–µ—á–∏—Ç—å –æ–¥–∏–Ω –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä SwipeRouter.
                  –¢–µ–ø–µ—Ä—å –æ–Ω –±—É–¥–µ—Ç –ø–ª–∞–≤–Ω–æ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ —Å–º–µ–Ω—É URL, –∞ –Ω–µ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–≤–∞—Ç—å—Å—è.
                */}
                <Route index element={<SwipeRouter />} />
                <Route path="generatePhoto" element={<SwipeRouter />} />
                <Route path="mapOfBatyrs" element={<SwipeRouter />} />
            </Route>
        </Routes>
    );
}

export default App;