import { Route, Routes, useNavigate, useLocation } from "react-router-dom";
import { useEffect, useState } from "react";
import ReactGA from "react-ga4";
import SwipeRouter from "../features/swiper/swiper.tsx";
import Layout from "../features/layout/layout.tsx";

const TRACKING_ID = "G-2J5SZSQH87";

// ‚úÖ –û–ë–ù–û–í–õ–ï–ù–û: –î–æ–±–∞–≤–ª—è–µ–º –±–æ–ª—å—à–µ —Ç–∏–ø–æ–≤ –¥–ª—è WebApp –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è
declare global {
    interface Window {
        Telegram: {
            WebApp: {
                ready: () => void;
                expand: () => void;
                enableClosingConfirmation: () => void;
                setBackgroundColor: (color: string) => void;
                setHeaderColor: (color: string) => void;
                MainButton: {
                    isVisible: boolean;
                    show: () => void;
                    hide: () => void;
                    setText: (text: string) => void;
                };
                onEvent: (eventType: 'viewportChanged', callback: (isStable: boolean) => void) => void;
                offEvent: (eventType: 'viewportChanged', callback: (isStable: boolean) => void) => void;
                initDataUnsafe?: {
                    start_param?: string;
                };
            };
        };
    }
}

function App() {
    const [isMobile, setIsMobile] = useState<boolean | null>(null);
    const navigate = useNavigate();
    const location = useLocation();

    // 1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Google Analytics (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
    useEffect(() => {
        ReactGA.initialize(TRACKING_ID);
    }, []);

    // 2. –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ —Å—Ç—Ä–∞–Ω–∏—Ü (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
    useEffect(() => {
        ReactGA.send({ hitType: "pageview", page: location.pathname + location.search });
    }, [location]);

    // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
    useEffect(() => {
        const checkIsMobile = () => /Mobi|Android|iPhone/i.test(navigator.userAgent);
        setIsMobile(checkIsMobile());
    }, []);

    // 4. ‚úÖ –û–ë–ù–û–í–õ–ï–ù–ù–´–ô useEffect –¥–ª—è Telegram –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –ø–æ–≥—Ä—É–∂–µ–Ω–∏—è
    useEffect(() => {
        if (window.Telegram && window.Telegram.WebApp) {
            const tg = window.Telegram.WebApp;

            // –°–æ–æ–±—â–∞–µ–º, —á—Ç–æ –≥–æ—Ç–æ–≤—ã, –∏ —Å—Ä–∞–∑—É —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –æ–∫–Ω–æ
            tg.ready();
            tg.expand();

            // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ü–≤–µ—Ç–∞ –¥–ª—è –±–µ—Å—à–æ–≤–Ω–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
            tg.setBackgroundColor('#f4f1e9'); // –¶–≤–µ—Ç —Ñ–æ–Ω–∞, –∫–∞–∫ —É –≤–∞—à–µ–π –∫–∞—Ä—Ç—ã
            tg.setHeaderColor('#3a2d21');    // –¢–µ–º–Ω–æ-–∫–æ—Ä–∏—á–Ω–µ–≤—ã–π –¥–ª—è —à–∞–ø–∫–∏

            // –í–∫–ª—é—á–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–∏—è, —á—Ç–æ–±—ã –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç—å —Å–ª—É—á–∞–π–Ω–æ–µ –∑–∞–∫—Ä—ã—Ç–∏–µ
            tg.enableClosingConfirmation();

            // "–•–∞–∫" –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è –Ω–∏–∂–Ω–µ–π –ø–∞–Ω–µ–ª–∏ Telegram:
            // –ú—ã –Ω–∞ –∫–æ—Ä–æ—Ç–∫–æ–µ –≤—Ä–µ–º—è –ø–æ–∫–∞–∑—ã–≤–∞–µ–º, –∞ –∑–∞—Ç–µ–º –ø—Ä—è—á–µ–º MainButton.
            // –≠—Ç–æ –∑–∞—Å—Ç–∞–≤–ª—è–µ—Ç Telegram —Å–∫—Ä—ã—Ç—å —Å–≤–æ—é —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –Ω–∏–∂–Ω—é—é –ø–∞–Ω–µ–ª—å.
            if (!tg.MainButton.isVisible) {
                tg.MainButton.setText(' '); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—É—Å—Ç–æ–π —Ç–µ–∫—Å—Ç
                tg.MainButton.show();
                setTimeout(() => tg.MainButton.hide(), 50);
            }

            // –û–±—Ä–∞–±–æ—Ç–∫–∞ deeplink-–ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
            const startParam = tg.initDataUnsafe?.start_param;
            if (startParam) {
                if (startParam === 'generatePhoto') {
                    navigate('/generatePhoto', { replace: true });
                } else if (startParam === 'mapOfBatyrs') {
                    navigate('/mapOfBatyrs', { replace: true });
                }
            }
        }
    }, [navigate]);

    if (isMobile === null) {
        return null;
    }

    if (!isMobile) {
        return (
            <div style={{ height: '100vh', display: 'flex', alignItems: 'center', justifyContent: 'center', textAlign: 'center', padding: '1rem' }}>
                <div>
                    <h2>‚ö†Ô∏è “ö–æ–ª–¥–∞–Ω–±–∞ —Ç–µ–∫ –º–æ–±–∏–ª—å–¥—ñ “õ“±—Ä—ã–ª“ì—ã–ª–∞—Ä“ì–∞ –∞—Ä–Ω–∞–ª“ì–∞–Ω</h2>
                    <p>–°–∞–π—Ç—Ç—ã —Ç–µ–ª–µ—Ñ–æ–Ω –∞—Ä“õ—ã–ª—ã –∞—à—ã“£—ã–∑ üì±</p>
                </div>
            </div>
        );
    }

    return (
        <Routes>
            <Route path="/" element={<Layout />}>
                <Route index element={<SwipeRouter />} />
                <Route path="generatePhoto" element={<SwipeRouter />} />
                <Route path="mapOfBatyrs" element={<SwipeRouter />} />
            </Route>
        </Routes>
    );
}

export default App;