import style from "./batyr.module.css";
import { useRef, useState } from "react";

const Batyr = () => {
    const isSpeakingRef = useRef(false);
    const [currentPage, setCurrentPage] = useState(1);
    const touchStartX = useRef(0);
    const totalPages = 3;

    // üéô –ì–æ–ª–æ—Å–æ–≤–æ–π –≤–≤–æ–¥ + TTS-–æ—Ç–≤–µ—Ç
    const handleVoiceInteraction = () => {
        if (!("webkitSpeechRecognition" in window)) {
            alert("–ë—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏");
            return;
        }

        const recognition = new window.webkitSpeechRecognition(); // @ts-ignore
        recognition.lang = "kk-KZ";
        recognition.interimResults = false;

        recognition.onresult = async (event: any) => {
            const userText = event.results[0][0].transcript;
            console.log("üé§ –í—ã —Å–∫–∞–∑–∞–ª–∏:", userText);

            try {
                const res = await fetch("http://localhost:8000/api/tts", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ text: userText }),
                });

                if (!res.ok) {
                    const errorText = await res.text();
                    console.error("‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:", errorText);
                    return;
                }

                const audioBlob = await res.blob();
                const audioUrl = URL.createObjectURL(audioBlob);
                const audio = new Audio(audioUrl);

                audio.onplaying = () => {
                    isSpeakingRef.current = true;
                };
                audio.onended = () => {
                    isSpeakingRef.current = false;
                };

                audio.play();
            } catch (error) {
                console.error("üí• –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:", error);
            }
        };

        recognition.onerror = (e) => {
            console.error("üéô –û—à–∏–±–∫–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è:", e.error);
        };

        recognition.start();
    };

    // üëÜ –°–≤–∞–π–ø-–ª–æ–≥–∏–∫–∞
    const handleTouchStart = (e: React.TouchEvent) => {
        touchStartX.current = e.touches[0].clientX;
    };

    const handleTouchEnd = (e: React.TouchEvent) => {
        const endX = e.changedTouches[0].clientX;
        const delta = touchStartX.current - endX;

        // –ë–ª–æ–∫–∏—Ä—É–µ–º —Å–≤–∞–π–ø –≤–ª–µ–≤–æ –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        if (delta > 50) {
            if (currentPage >= totalPages) {
                console.log("‚õî –ù–µ–ª—å–∑—è —Å–≤–∞–π–ø–Ω—É—Ç—å –¥–∞–ª—å—à–µ –≤–ø—Ä–∞–≤–æ (–ø–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞)");
                return;
            }
            setCurrentPage((prev) => prev + 1);
        }

        // –ë–ª–æ–∫–∏—Ä—É–µ–º —Å–≤–∞–π–ø –≤–ø—Ä–∞–≤–æ –Ω–∞ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        else if (delta < -50) {
            if (currentPage <= 1) {
                console.log("‚õî –ù–µ–ª—å–∑—è —Å–≤–∞–π–ø–Ω—É—Ç—å –¥–∞–ª—å—à–µ –≤–ª–µ–≤–æ (–ø–µ—Ä–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞)");
                return;
            }
            setCurrentPage((prev) => prev - 1);
        }
    };

    return (
        <div
            className={style.batyrContent}
            onTouchStart={handleTouchStart}
            onTouchEnd={handleTouchEnd}
        >
            <div className={style.holder}>
                <div className={style.description}>
                    <img src="/homePage/profile.png" alt="–ü—Ä–æ—Ñ–∏–ª—å" />
                    <p>Madi</p>
                </div>
                <div className={style.settings}>
                    <img src="/homePage/settings.png" alt="–ù–∞—Å—Ç—Ä–æ–π–∫–∏" />
                </div>
            </div>

            <div className={style.batyrModel}>
                <img
                    src="/homePage/Hero.png"
                    alt="–ì–µ—Ä–æ–π"
                    onClick={handleVoiceInteraction}
                    style={{ cursor: "pointer" }}
                />
            </div>

        </div>
    );
};

export default Batyr;
