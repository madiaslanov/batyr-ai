// –ü–æ–ª–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–ª—è —Ñ–∞–π–ª–∞ Batyr.tsx

import style from "./batyr.module.css";
import { useState, useEffect } from "react";
import { useNavigate } from "react-router-dom";

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –ø–∞–∫–µ—Ç–æ–≤
interface Package {
    id: string;
    name: string;
    price: string;
}

// –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–ø—Å—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
interface BatyrProps {
    tgUser?: {
        first_name: string;
        username?: string;
        photo_url?: string;
    };
    isRecording: boolean;
    isProcessing: boolean;
    isHistoryEmpty: boolean;
    onToggleRecording: () => void;
    // –ù–æ–≤—ã–µ –ø—Ä–æ–ø—Å—ã –¥–ª—è –ø–ª–∞—Ç–µ–∂–µ–π
    credits: number | null;
    isPaymentModalOpen: boolean;
    isLoadingPayment: boolean;
    onOpenPaymentModal: () => void;
    onClosePaymentModal: () => void;
    onPurchase: (packageId: string) => void;
    packages: Package[];
}

export const Batyr = ({
                          tgUser,
                          isRecording,
                          isProcessing,
                          isHistoryEmpty,
                          onToggleRecording,
                          // –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤—ã–µ –ø—Ä–æ–ø—Å—ã
                          credits,
                          isPaymentModalOpen,
                          isLoadingPayment,
                          onOpenPaymentModal, // <-- –ü–æ–ª—É—á–∞–µ–º —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é
                          onClosePaymentModal,
                          onPurchase,
                          packages,
                      }: BatyrProps) => {
    const navigate = useNavigate();
    const [showHint, setShowHint] = useState(false);

    useEffect(() => {
        if (isHistoryEmpty) {
            setShowHint(true);
            const timer = setTimeout(() => setShowHint(false), 5000);
            return () => clearTimeout(timer);
        }
    }, [isHistoryEmpty]);

    const handleToggleRecording = () => {
        setShowHint(false);
        onToggleRecording(); // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é-–ø—Ä–æ–≤–µ—Ä–∫—É –∏–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    };

    return (
        <div className={style.batyrContent}>
            {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –æ–ø–ª–∞—Ç—ã */}
            {isPaymentModalOpen && (
                <div className={style.modalOverlay} onClick={onClosePaymentModal}>
                    <div className={style.modalContent} onClick={(e) => e.stopPropagation()}>
                        <h3>–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å</h3>
                        <p>–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –ø–∞–∫–µ—Ç:</p>
                        <div className={style.packageList}>
                            {packages.map((pkg) => (
                                <button
                                    key={pkg.id}
                                    className={style.packageItem}
                                    onClick={() => onPurchase(pkg.id)}
                                    disabled={isLoadingPayment}
                                >
                                    <span className={style.packageName}>{pkg.name}</span>
                                    <span className={style.packagePrice}>{pkg.price}</span>
                                </button>
                            ))}
                        </div>
                        {isLoadingPayment && <div className={style.loader}></div>}
                    </div>
                </div>
            )}

            {/* –ë–ª–æ–∫ —Å –ø—Ä–æ—Ñ–∏–ª–µ–º –∏ –±–∞–ª–∞–Ω—Å–æ–º */}
            <div className={style.holder}>
                <div className={style.description}>
                    <img src={tgUser?.photo_url || "/homePage/profile.png"} alt="–ü—Ä–æ—Ñ–∏–ª—å" />
                    <p>{tgUser?.username || tgUser?.first_name || "–ì–æ—Å—Ç—å"}</p>

                    {/* --- –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –ë–õ–û–ö --- */}
                    {/* –ú—ã –¥–æ–±–∞–≤–∏–ª–∏ onClick, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é onOpenPaymentModal –∏–∑ –ø—Ä–æ–ø—Å–æ–≤ */}
                    <div className={style.creditsHolder} onClick={onOpenPaymentModal}>
                        <span>–ë–∞–ª–∞–Ω—Å:</span>
                        <div className={style.creditsAmount}>
                            {/* SVG –∏–∫–æ–Ω–∫–∞ –º–æ–Ω–µ—Ç–∫–∏ */}
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="#ffc107" className={style.creditsIcon}><path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM11 17h2v-1h-2v1zm2-2.25V16h-2v-1.25c-1.35-.5-2-1.77-2-3.25 0-1.93 1.57-3.5 3.5-3.5s3.5 1.57 3.5 3.5c0 1.48-.65 2.75-2 3.25z"/><path d="M0 0h24v24H0z" fill="none"/><path d="M12.5 10.5h-1v2.53c.69.15 1.2.72 1.2 1.47 0 .83-.67 1.5-1.5 1.5s-1.5-.67-1.5-1.5c0-.75.51-1.32 1.2-1.47V10.5h-1c-.28 0-.5-.22-.5-.5s.22-.5.5-.5h3c.28 0 .5.22.5.5s-.22.5-.5.5z" opacity=".3"/></svg>
                            <span>{credits === null ? "..." : credits}</span>
                        </div>
                    </div>
                </div>
            </div>

            {/* –ë–ª–æ–∫ —Å –±–∞—Ç—ã—Ä–æ–º */}
            <div className={style.batyrWrapper}>
                {showHint && (
                    <div className={style.welcomeHint}>
                        –ë–∞—Ç—ã—Ä–¥—ã –±–∞—Å—Ç–∞, <br/>
                        –ú–∞“ì–∞–Ω —Å“±—Ä–∞“õ “õ–æ–π, –º—ã—Å–∞–ª—ã: <br />
                        <strong>¬´–ê–ª—Ç—ã–Ω –û—Ä–¥–∞ “õ–∞—à–∞–Ω “õ“±—Ä—ã–ª–¥—ã?¬ª</strong>
                    </div>
                )}
                <div className={style.batyrModel} onClick={handleToggleRecording}>
                    <div className={`${style.statusIndicator} ${isRecording ? style.recording : ''} ${isProcessing ? style.processing : ''}`}>
                        {isProcessing ? 'ü§î' : (isRecording ? '‚èπÔ∏è' : 'üé§')}
                    </div>
                    <img
                        src="/homePage/batyr.png"
                        alt="–ì–µ—Ä–æ–π"
                    />
                </div>
            </div>
        </div>
    );
};