// ui/batyr.tsx
import style from "./batyr.module.css";
import { useState, useEffect } from "react"; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ö—É–∫–∏

interface BatyrProps {
    tgUser?: {
        first_name: string;
        username?: string;
        photo_url?: string;
    };
    isRecording: boolean;
    isProcessing: boolean;
    isHistoryEmpty: boolean; // –≠—Ç–∞ –ø—Ä–æ–ø—Å–∞ –Ω–∞–º –≤—Å–µ –µ—â–µ –Ω—É–∂–Ω–∞
    onToggleRecording: () => void;
}

export const Batyr = ({
                          tgUser,
                          isRecording,
                          isProcessing,
                          isHistoryEmpty,
                          onToggleRecording,
                      }: BatyrProps) => {

    // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–π –ø–æ–¥—Å–∫–∞–∑–∫–∏
    const [showHint, setShowHint] = useState(false);

    // –≠—Ñ—Ñ–µ–∫—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∫–∞–∂–µ—Ç –ø–æ–¥—Å–∫–∞–∑–∫—É, –µ—Å–ª–∏ –∏—Å—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞
    useEffect(() => {
        if (isHistoryEmpty) {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
            setShowHint(true);

            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–µ—Ä, —á—Ç–æ–±—ã —Å–∫—Ä—ã—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫—É —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
            const timer = setTimeout(() => {
                setShowHint(false);
            }, 5000); // 5000 –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥ = 5 —Å–µ–∫—É–Ω–¥

            // –û—á–∏—â–∞–µ–º —Ç–∞–π–º–µ—Ä, –µ—Å–ª–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä—É–µ—Ç—Å—è —Ä–∞–Ω—å—à–µ
            return () => clearTimeout(timer);
        }
    }, [isHistoryEmpty]); // –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç isHistoryEmpty

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–∫—Ä–æ–µ—Ç –ø–æ–¥—Å–∫–∞–∑–∫—É –∏ –Ω–∞—á–Ω–µ—Ç –∑–∞–ø–∏—Å—å
    const handleToggleRecording = () => {
        setShowHint(false); // –°–∫—Ä—ã–≤–∞–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∂–µ –¥–µ–π—Å—Ç–≤–∏–∏
        onToggleRecording();
    };


    return (
        <div className={style.batyrContent}>
            <div className={style.holder}>
                <div className={style.description}>
                    <img src={tgUser?.photo_url || "/homePage/profile.png"} alt="–ü—Ä–æ—Ñ–∏–ª—å" />
                    <p>{tgUser?.username || tgUser?.first_name || "–ì–æ—Å—Ç—å"}</p>
                </div>
            </div>

            {/* –ú–æ–¥–µ–ª—å –ë–∞—Ç—ã—Ä–∞ —Ç–µ–ø–µ—Ä—å –æ–±–µ—Ä—Ç–∫–∞ –¥–ª—è –ø–æ–¥—Å–∫–∞–∑–∫–∏ */}
            <div className={style.batyrWrapper}>
                {/* ‚úÖ –ù–æ–≤–∞—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–∞—è –ø–æ–¥—Å–∫–∞–∑–∫–∞ */}
                {showHint && (
                    <div className={style.welcomeHint}>
                       –ë–∞—Ç—ã—Ä–¥—ã –±–∞—Å—Ç–∞, <br/>
                        –ú–∞“ì–∞–Ω —Å“±—Ä–∞“õ “õ–æ–π, –º—ã—Å–∞–ª—ã: <br />
                        <strong>¬´–ê–ª—Ç—ã–Ω –û—Ä–¥–∞ “õ–∞—à–∞–Ω “õ“±—Ä—ã–ª–¥—ã?¬ª</strong>
                    </div>
                )}

                <div className={style.batyrModel} onClick={handleToggleRecording}>
                    <div className={`${style.statusIndicator} ${isRecording ? style.recording : ''} ${isProcessing ? style.processing : ''}`}>
                        {isProcessing ? 'ü§î' : (isRecording ? '‚èπÔ∏è' : 'üé§')}
                    </div>

                    <img
                        src="/homePage/batyr.png"
                        alt="–ì–µ—Ä–æ–π"
                    />
                </div>
            </div>
        </div>
    );
};