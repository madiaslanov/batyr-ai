// PhotoContainer.tsx
import { useEffect, useRef } from "react";
// ‚úÖ –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
import { useBatyrStore } from "./module/useBatyrStore.ts";
// ‚úÖ –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ API
import { getTaskStatus, startFaceSwapTask } from "./api";
import Photo from "./ui/photo.tsx";

// –û–±—â–∏–π —Ç–∞–π–º–∞—É—Ç –¥–ª—è –æ–ø—Ä–æ—Å–∞ –∑–∞–¥–∞—á–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 3 –º–∏–Ω—É—Ç—ã)
const POLLING_TIMEOUT_SECONDS = 180;

const PhotoContainer = () => {
    // ‚úÖ –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ —Å–µ—Ç—Ç–µ—Ä—ã –∏–∑ Zustand
    const {
        step, setStep,
        userPhoto, setUserPhoto,
        preview, setPreview,
        loading, setLoading,
        resultUrl, setResultUrl,
        jobId, setJobId, // –ò—Å–ø–æ–ª—å–∑—É–µ–º jobId –≤–º–µ—Å—Ç–æ taskId –∏ taskTime
        clearAll,
        isPolling, setIsPolling,
    } = useBatyrStore();

    const intervalRef = useRef<NodeJS.Timeout | null>(null);
    const pollingStartTimeRef = useRef<number | null>(null); // –î–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ç–∞–π–º–∞—É—Ç–∞

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ localStorage
    const clearLocalStorage = () => {
        localStorage.removeItem("batyr_job_id");
        localStorage.removeItem("batyr_result_url");
        localStorage.removeItem("batyr_preview");
    };

    // ------------------ POLLING (–û–ø—Ä–æ—Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞) ------------------
    const startPolling = (currentJobId: string) => {
        if (isPolling || intervalRef.current) return;

        console.log(`üöÄ –ù–∞—á–∏–Ω–∞–µ–º –æ–ø—Ä–æ—Å –¥–ª—è Job ID: ${currentJobId}`);
        setIsPolling(true);
        pollingStartTimeRef.current = Date.now(); // –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞

        intervalRef.current = setInterval(async () => {
            // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ–±—â–∏–π —Ç–∞–π–º–∞—É—Ç –æ–ø—Ä–æ—Å–∞
            if (Date.now() - (pollingStartTimeRef.current ?? 0) > POLLING_TIMEOUT_SECONDS * 1000) {
                console.error("‚è±Ô∏è –¢–∞–π–º–∞—É—Ç –æ–ø—Ä–æ—Å–∞ –∏—Å—Ç–µ–∫.");
                alert("–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∏—Å—Ç–µ–∫–ª–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.");
                handleClear(); // –ü–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å
                return;
            }

            try {
                // ‚úÖ –í—ã–∑—ã–≤–∞–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
                const data = await getTaskStatus(currentJobId);
                console.log(`‚åõ –°—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏ [${currentJobId}]: ${data.status}`);

                if (data.status === "completed") {
                    console.log("‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–ª—É—á–µ–Ω!", data.result_url);
                    stopPolling();
                    setResultUrl(data.result_url);
                    setLoading(false);
                    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≥–æ—Ç–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ localStorage
                    localStorage.setItem("batyr_result_url", data.result_url);
                    if (preview) {
                        localStorage.setItem("batyr_preview", preview);
                    }
                    // –ó–∞–¥–∞—á–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, —É–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π ID
                    localStorage.removeItem("batyr_job_id");
                    return;
                }

                if (data.status === "failed") {
                    console.error("‚ùå –ó–∞–¥–∞—á–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π:", data.error);
                    alert(`–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: ${data.error || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"}`);
                    handleClear();
                    return;
                }

                // –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å "accepted" –∏–ª–∏ "processing", –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–ø—Ä–æ—Å...

            } catch (err) {
                console.error("üî• –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–ø—Ä–æ—Å–µ —Å—Ç–∞—Ç—É—Å–∞:", err);
                // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                alert("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.");
                handleClear(); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–µ –æ–ø—Ä–æ—Å–∞
            }
        }, 5000); // –û–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
    };

    const stopPolling = () => {
        if (intervalRef.current) {
            clearInterval(intervalRef.current);
            intervalRef.current = null;
        }
        setIsPolling(false);
        pollingStartTimeRef.current = null; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–∞–π–º–µ—Ä
        console.log("üõë –û–ø—Ä–æ—Å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.");
    };

    // ------------------ INIT (–ü—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã) ------------------
    useEffect(() => {
        const storedJobId = localStorage.getItem("batyr_job_id");
        const storedResultUrl = localStorage.getItem("batyr_result_url");
        const storedPreview = localStorage.getItem("batyr_preview");

        // 1. –ï—Å–ª–∏ –µ—Å—Ç—å –ì–û–¢–û–í–´–ô —Ä–µ–∑—É–ª—å—Ç–∞—Ç, —Å—Ä–∞–∑—É –µ–≥–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º
        if (storedResultUrl && storedPreview) {
            console.log("–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ localStorage: –Ω–∞–π–¥–µ–Ω –≥–æ—Ç–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç.");
            setPreview(storedPreview);
            setResultUrl(storedResultUrl);
            setStep(2);
            setLoading(false);
            return;
        }

        // 2. –ï—Å–ª–∏ –µ—Å—Ç—å –ê–ö–¢–ò–í–ù–ê–Ø –∑–∞–¥–∞—á–∞, –≤–æ–∑–æ–±–Ω–æ–≤–ª—è–µ–º –æ–ø—Ä–æ—Å
        if (storedJobId) {
            console.log("–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ localStorage: –Ω–∞–π–¥–µ–Ω–∞ –∞–∫—Ç–∏–≤–Ω–∞—è –∑–∞–¥–∞—á–∞.");
            setJobId(storedJobId);
            setPreview(storedPreview || null);
            setStep(2);
            setLoading(true);
            startPolling(storedJobId);
            return;
        }

        // 3. –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ—Ç, –ø—Ä–æ—Å—Ç–æ —É–±–µ–¥–∏–º—Å—è, —á—Ç–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —á–∏—Å—Ç–æ–µ
        console.log("–ù–æ–≤–∞—è —Å–µ—Å—Å–∏—è, —Å–æ—Å—Ç–æ—è–Ω–∏–µ —á–∏—Å—Ç–æ–µ.");
        handleClear();

        // –û—á–∏—â–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —É—Ç–µ—á–µ–∫ –ø–∞–º—è—Ç–∏
        return () => stopPolling();
    }, []); // –ü—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π = –∑–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏

    // ------------------ GENERATE (–ó–∞–ø—É—Å–∫ –Ω–æ–≤–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏) ------------------
    const handleNext = async () => {
        if (!userPhoto || loading) return;

        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —ç–∫—Ä–∞–Ω—É –∑–∞–≥—Ä—É–∑–∫–∏
        setStep(2);
        setLoading(true);
        setResultUrl(null); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç–∞—Ä—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç

        // –û—á–∏—â–∞–µ–º localStorage –æ—Ç –¥–∞–Ω–Ω—ã—Ö –ø—Ä–µ–¥—ã–¥—É—â–µ–π –∑–∞–¥–∞—á–∏
        clearLocalStorage();

        try {
            console.log("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–¥–∞—á—É –Ω–∞ –±—ç–∫–µ–Ω–¥–µ...");
            // ‚úÖ –í—ã–∑—ã–≤–∞–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é API –¥–ª—è —Å—Ç–∞—Ä—Ç–∞ –∑–∞–¥–∞—á–∏
            const data = await startFaceSwapTask(userPhoto);
            const newJobId = data.job_id;

            if (newJobId) {
                setJobId(newJobId);
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –∑–∞–¥–∞—á–∏ –≤ localStorage –¥–ª—è –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏
                localStorage.setItem("batyr_job_id", newJobId);
                if (preview) {
                    localStorage.setItem("batyr_preview", preview);
                }
                // –ù–∞—á–∏–Ω–∞–µ–º –æ–ø—Ä–æ—Å
                startPolling(newJobId);
            } else {
                console.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –∑–∞–¥–∞—á—É: –±—ç–∫–µ–Ω–¥ –Ω–µ –≤–µ—Ä–Ω—É–ª job_id.");
                alert("–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
                handleClear();
            }
        } catch (err) {
            console.error("üî• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∑–∞–¥–∞—á–∏:", err);
            const errorMessage = (err as Error)?.message || "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞.";
            alert(`–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ: ${errorMessage}`);
            handleClear();
        }
    };

    // ------------------ HANDLERS (–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ UI) ------------------
    const handleClear = () => {
        stopPolling();      // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ª—é–±–æ–π –∞–∫—Ç–∏–≤–Ω—ã–π –æ–ø—Ä–æ—Å
        clearLocalStorage(); // –û—á–∏—â–∞–µ–º localStorage
        clearAll();         // –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ Zustand
        // setStep(1) —É–∂–µ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ clearAll()
    };

    const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {
        const file = e.target.files?.[0];
        if (file) {
            handleClear(); // –ü–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –Ω–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞
            const previewUrl = URL.createObjectURL(file);
            setUserPhoto(file);
            setPreview(previewUrl);
        }
    };

    // –§—É–Ω–∫—Ü–∏—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    const downloadImage = () => {
        if (!resultUrl) return;
        const link = document.createElement("a");
        link.href = resultUrl;
        link.download = "batyr-result.jpg";
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
    };

    return (
        <Photo
            step={step}
            preview={preview}
            loading={loading}
            resultUrl={resultUrl}
            userPhoto={userPhoto}
            onNext={handleNext}
            onClear={handleClear}
            onFileChange={handleFileChange}
            onDownload={downloadImage}
        />
    );
};

export default PhotoContainer;