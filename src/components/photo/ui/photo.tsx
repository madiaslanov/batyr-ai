

import styles from "../photo.module.css";
import type {Gender} from "../module/useBatyrStore.ts";
import CustomSelect from "../../../shared/CustomSelect.tsx";

type PhotoUIProps = {
    step: 1 | 2;
    userPhoto: File | null;
    preview: string | null;
    resultUrl: string | null;
    loading: boolean;
    isSending: boolean;
    loadingMessage: string;
    gender: Gender;
    onFileChange: (e: React.ChangeEvent<HTMLInputElement>) => void;
    onClear: () => void;
    onNext: () => void;
    onSendToChat: () => void;

    onGenderChange: (e: React.ChangeEvent<HTMLSelectElement>) => void;
};

const Photo = ({
                   step,
                   userPhoto,
                   preview,
                   resultUrl,
                   loading,
                   isSending,
                   loadingMessage,
                   gender,
                   onFileChange,
                   onClear,
                   onNext,
                   onSendToChat,
                   onGenderChange
               }: PhotoUIProps) => {

    const genderOptions = [
        { value: 'male', label: '–ë–∞—Ç—ã—Ä (–ï—Ä)' },
        { value: 'female', label: '–ë–∞—Ç—ã—Ä-“õ—ã–∑ (”ò–π–µ–ª)' },
    ];


    const handleCustomSelectChange = (value: string) => {

        const event = {
            target: { value }
        } as React.ChangeEvent<HTMLSelectElement>;
        onGenderChange(event);
    };

    return (
        <div className={styles.container}>
            <div className={styles.headerRow}>
                <h1 className={styles.title}>üõ°Ô∏è –ë–∞—Ç—ã—Ä –ë–æ–ª!</h1>
                <div className={styles.tooltip}>
                    ‚ÑπÔ∏è
                    <span className={styles.tooltipText}>
                        –§–æ—Ç–æ –∞–Ω—ã“õ, –∂–∞—Ä—ã“õ –∂–∞“õ—Å—ã –±–æ–ª—É—ã –∫–µ—Ä–µ–∫. –ë–µ—Ç—ñ“£—ñ–∑ —ñ—Ä—ñ –ø–ª–∞–Ω–¥–∞, –∫–∞–º–µ—Ä–∞“ì–∞ —Ç—ñ–∫ “õ–∞—Ä–∞–ø —Ç“±—Ä—Å—ã–Ω. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–æ–ª—ã“õ –∞—è“õ—Ç–∞–ª“ì–∞–Ω—à–∞ (1‚Äì2 –º–∏–Ω—É—Ç) –ø–∞—Ä–∞“õ—à–∞–Ω—ã –∂–∞–ø–ø–∞“£—ã–∑. –î–∞–π—ã–Ω –±–æ–ª“ì–∞–Ω —Å–æ“£ "–ß–∞—Ç“õ–∞ –∂—ñ–±–µ—Ä—É" –¥—ñ –±–∞—Å—É–¥—ã “±–º—ã—Ç–ø–∞“£—ã–∑
                    </span>
                </div>
            </div>

            {step === 1 && (
                <>
                    {!userPhoto && (
                        <label className={styles.uploadLabel}>
                            <input type="file" accept="image/*" onChange={onFileChange} hidden/>
                            <div className={styles.inputIcon}></div>
                        </label>
                    )}
                    {preview && (
                        <div className={styles.preview}>
                            <img src={preview} alt="–ü—Ä–µ–≤—å—é" className={styles.previewImage}/>
                        </div>
                    )}

                    <div className={styles.genderSelector}>
                        <label>–ë–∞—Ç—ã—Ä –∫–µ–π—ñ–ø—ñ–Ω —Ç–∞“£–¥–∞“£—ã–∑:</label>
                        <CustomSelect
                            options={genderOptions}
                            value={gender}
                            onChange={handleCustomSelectChange}
                            disabled={!!userPhoto}
                        />
                    </div>

                    <div className={styles.buttonGroup}>
                        <button className={styles.button} onClick={onClear}>”®—à—ñ—Ä—É</button>
                        <button className={styles.button} onClick={onNext} disabled={loading || !userPhoto}>
                            –ë–∞—Ç—ã—Ä –±–æ–ª—É
                        </button>
                    </div>
                </>
            )}

            {step === 2 && (
                <>
                    <div className={styles.resultContainer}>
                        {loading && (
                            <div className={styles.loadingIndicator}>
                                <p className={styles.loading}>{loadingMessage}</p>
                            </div>
                        )}
                        {!loading && resultUrl && (
                            <div className={styles.resultContent}>
                                <p className={styles.loading}>{loadingMessage}</p>
                                <img src={resultUrl} alt="–†–µ–∑—É–ª—å—Ç–∞—Ç" className={styles.resultImage}/>
                            </div>
                        )}
                    </div>

                    <div className={styles.buttonGroup}>
                        {!loading && resultUrl && (
                            <>
                                <button
                                    className={styles.button}
                                    onClick={onSendToChat}
                                    disabled={isSending}
                                >
                                    {isSending ? 'üöÄ –ñ—ñ–±–µ—Ä—ñ–ª—É–¥–µ...' : '–ß–∞—Ç“õ–∞ –∂—ñ–±–µ—Ä—É'}
                                </button>

                                <button className={styles.button} onClick={onClear}>
                                    –ë–∞—Å“õ–∞ —Ñ–æ—Ç–æ –∂“Ø–∫—Ç–µ—É
                                </button>
                            </>
                        )}
                    </div>
                </>
            )}
        </div>
    );
};

export default Photo;