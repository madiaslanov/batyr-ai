/* src/pages/ShezhirePage/ShezhirePage.module.css */

/* --- ИЗМЕНЕНО: Контейнер теперь Flexbox-контейнер --- */
.container {
    /* 1. Превращаем в flex-контейнер, который располагает элементы в колонку */
    display: flex;
    flex-direction: column;

    /* 2. Задаем строгую высоту, равную высоте экрана, и запрещаем ему самому скроллиться */
    height: 100vh;
    overflow: hidden;

    /* 3. Стили, которые у вас уже были */
    position: relative;
    box-sizing: border-box; /* Для корректного расчета высоты с padding */
    padding: 16px;
    padding-top: 60px; /* Оставляем место для кнопки выхода */
    background-color: #f4f1e9;
    color: #333;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
}

/* ✅ СТИЛИ ДЛЯ КНОПКИ ВЫХОДА (из прошлого шага, оставляем без изменений) */
.exitButton {
    position: absolute;
    top: 16px;
    left: 16px;
    background-color: #e0d9c7;
    color: #5a2d0c;
    border: none;
    border-radius: 50px;
    padding: 8px 16px;
    font-size: 14px;
    font-weight: bold;
    cursor: pointer;
    z-index: 100;
    transition: background-color 0.2s;
}

.exitButton:hover {
    background-color: #d1c8b4;
}


/* --- Все остальные стили ниже остаются такими же или с небольшими изменениями --- */

.title {
    text-align: center;
    color: #8b4513;
    margin-bottom: 20px;
    /* Указываем, чтобы заголовок не сжимался */
    flex-shrink: 0;
}

.searchBox {
    position: relative;
    margin-bottom: 20px;
    /* Указываем, чтобы блок поиска не сжимался */
    flex-shrink: 0;
}

.input {
    width: 100%;
    padding: 12px;
    border-radius: 8px;
    border: 1px solid #ddd;
    box-sizing: border-box;
    font-size: 16px;
}

.results {
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;
    background: white;
    border: 1px solid #ddd;
    border-top: none;
    border-radius: 0 0 8px 8px;
    list-style: none;
    padding: 0;
    margin: 0;
    max-height: 200px;
    overflow-y: auto;
    z-index: 10;
}

.results li {
    padding: 12px;
    cursor: pointer;
}

.results li:hover {
    background-color: #f0f0f0;
}

.loading, .error {
    text-align: center;
    padding: 20px;
    font-size: 18px;
}

.error {
    color: #d9534f;
}

.backButton {
    display: inline-block;
    background: none;
    border: 1px solid #8b4513;
    color: #8b4513;
    padding: 8px 16px;
    border-radius: 20px;
    cursor: pointer;
    margin-bottom: 20px;
    font-size: 14px;
    /* Указываем, чтобы кнопка не сжималась */
    flex-shrink: 0;
}

.nodeDisplay {
    background-color: white;
    padding: 20px;
    border-radius: 12px;
    text-align: center;
    margin-bottom: 20px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.05);
    /* Указываем, чтобы этот блок не сжимался */
    flex-shrink: 0;
}

.nodeName {
    margin: 0;
    font-size: 24px;
    color: #5a2d0c;
}

.childrenTitle {
    color: #8b4513;
    border-bottom: 2px solid #e0d9c7;
    padding-bottom: 8px;
    margin-bottom: 12px;
    /* Указываем, чтобы заголовок списка не сжимался */
    flex-shrink: 0;
}

/* --- ИЗМЕНЕНО: Список детей теперь гибкий и скроллится --- */
.childrenList {
    list-style: none;
    padding: 0;
    margin: 0; /* Убираем стандартный отступ */

    /* 1. Говорим списку занять ВСЁ оставшееся свободное место в контейнере */
    flex-grow: 1;

    /* 2. Добавляем вертикальный скролл, если контент не помещается */
    overflow-y: auto;

    /* Добавляем небольшой отступ справа для полосы прокрутки */
    padding-right: 8px;
}

.childrenList li {
    background-color: white;
    padding: 15px;
    border-radius: 8px;
    margin-bottom: 10px;
    cursor: pointer;
    transition: transform 0.2s ease;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
}

.childrenList li:hover {
    transform: translateX(5px);
    background-color: #fffbef;
}

.noChildren {
    text-align: center;
    color: #777;
    padding: 20px;
}